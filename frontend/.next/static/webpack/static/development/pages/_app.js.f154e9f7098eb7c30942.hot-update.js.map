{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.f154e9f7098eb7c30942.hot-update.js","sources":["webpack:///./lib/withData.js"],"sourcesContent":["import withApollo from \"next-with-apollo\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { endpoint } from \"../config\";\r\nimport { LOCAL_STATE_QUERY } from \"../components/Cart\";\r\n\r\nfunction createClient({ headers }) {\r\n  return new ApolloClient({\r\n    uri: process.env.NODE_ENV === \"development\" ? endpoint : endpoint,\r\n    request: (operation) => {\r\n      operation.setContext({\r\n        fetchOptions: {\r\n          credentials: \"include\",\r\n        },\r\n        headers,\r\n      });\r\n    },\r\n    // local data\r\n    clientState: {\r\n      resolvers: {\r\n        Mutation: {\r\n          toggleCart(_, variables, { cache }) {\r\n            // Read the cartOpen value from the cache\r\n            const { cartOpen } = cache.readQuery({\r\n              query: LOCAL_STATE_QUERY,\r\n            });\r\n            //Write the Cart State to the opposite\r\n            const data = {\r\n              data: {\r\n                cartOpen: !cartOpen,\r\n              },\r\n            };\r\n            cache.writeData(data);\r\n            return data;\r\n          },\r\n        },\r\n      },\r\n      defaults: {\r\n        cartOpen: false,\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\nexport default withApollo(createClient);\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAGA;AADA;AAFA;AACA;AACA;AAIA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AAdA;AADA;AAkBA;AACA;AADA;AAnBA;AAXA;AAmCA;AACA;AACA;;;;A","sourceRoot":""}